name: Validate

on: [push, pull_request]

jobs:
  main:
    name: Run type checks, lint, and tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
      postgres:
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: test
          # required
          POSTGRES_PASSWORD: test
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      NANGO_SECRET_KEY: noop
      POSTGRES_URL: postgres://postgres:test@localhost:5432/test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 # TODO: Can we get this from "engine" field in package.json?

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8 # Ideally we should get this from engine field too...
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Run type checks
        run: pnpm run typecheck

      - name: Run lint
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test::ci
      
      - name: Test migrations
        run: DEBUG=true pnpm --dir packages/db/ db:run-migration

      - name: Run builds
        run: pnpm turbo build --filter !main
